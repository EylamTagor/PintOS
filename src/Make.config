# -*- makefile -*-

SHELL = /bin/sh

VPATH = $(SRCDIR)

# Binary utilities.
# If the host appears to be x86, use the normal tools.
# If it's x86-64, use the compiler and linker in 32-bit mode.
# Otherwise assume cross-tools are installed as i386-elf-*.
X86 = i.86\|pentium.*\|[pk][56]\|nexgen\|viac3\|6x86\|athlon.*\|i86pc
X86_64 = x86_64

CCPROG = gcc-11
ifeq ($(strip $(shell command -v $(CCPROG) 2> /dev/null)),)
  CCPROG = gcc
endif

ifneq (0, $(shell expr `uname -m` : '$(X86)'))
  CC = $(CCPROG)
  LD = ld
  OBJCOPY = objcopy
else
  ifneq (0, $(shell expr `uname -m` : '$(X86_64)'))
    CC = $(CCPROG) -m32
    LD = ld -melf_i386
    OBJCOPY = objcopy
  else
    CC = i386-elf-gcc
    LD = i386-elf-ld
    OBJCOPY = i386-elf-objcopy
  endif
endif


ifeq ($(strip $(shell command -v $(CC) 2> /dev/null)),)
$(warning *** Compiler ($(CC)) not found.  Did you set $$PATH properly?  Please refer to the Getting Started section in the documentation for details. ***)
endif

# Compiler and assembler invocation.
DEFINES =
WARNINGS = -Wall -Wextra -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
# These are needed as of (at least) gcc-11 to prevent the compiler from optimizing
# out info for backtraces. May need to be updated for newer compiler versions.
OPTFLAGS = -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-inline-functions-called-once
CFLAGS = -g3 -fvar-tracking-assignments -msoft-float -O1 -march=i686 $(OPTFLAGS)
CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/lib
ASFLAGS = -Wa,--gstabs
LDFLAGS = -z noseparate-code
DEPS = -MMD -MF $(@:.o=.d)

# Turn off -fstack-protector, which we don't support.
ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
CFLAGS += -fno-stack-protector
endif

# Turn off --build-id in the linker, which confuses the Pintos loader.
#ifeq ($(strip $(shell $(LD) --build-id=none -e 0 /dev/null -o /dev/null 2>&1; echo $$?)),0)
#ifeq ($(strip $(shell $(LD) --help | grep -q build-id; echo $$?)),0)
LDFLAGS += -Wl,--build-id=none
#endif

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEFINES) $(DEPS)

%.o: %.S
	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) $(DEPS)
